name: Monthly ML Model Retrain

on:
  schedule:
    # 매월 1일 오전 8시 (UTC 23:00 = KST 08:00)
    - cron: '0 23 1 * *'
  
  push:
    branches: [ main ]
    paths:
      - 'main.py'
      - 'ml/**'
      - 'run_main.py'
      - 'config.py'
      
  pull_request:
    branches: [ main ]
    paths:
      - 'main.py'
      - 'ml/**'
      - 'run_main.py'
      - 'config.py'
  
  # 수동 실행 가능
  workflow_dispatch:

jobs:
  retrain-model:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Google Sheets credentials
      run: |
        mkdir -p credentials
        echo "🔧 Secret 길이: ${#GOOGLE_SERVICE_ACCOUNT_JSON}"
        echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' | base64 -d > credentials/gst-manegemnet-70faf8ce1bff.json
        # JSON 파일 검증
        echo "📂 생성된 파일 정보:"
        ls -la credentials/gst-manegemnet-70faf8ce1bff.json
        echo "📄 파일 크기: $(wc -c < credentials/gst-manegemnet-70faf8ce1bff.json) bytes"
        
        if [ -s credentials/gst-manegemnet-70faf8ce1bff.json ]; then
          echo "✅ Google Sheets 인증 파일 생성 완료"
          echo "🔍 JSON 파일 첫 3줄:"
          head -3 credentials/gst-manegemnet-70faf8ce1bff.json
          echo "🔍 JSON 유효성 검사:"
          if python -m json.tool credentials/gst-manegemnet-70faf8ce1bff.json > /dev/null 2>&1; then
            echo "✅ JSON 형식 유효"
          else
            echo "❌ JSON 형식 오류"
            cat credentials/gst-manegemnet-70faf8ce1bff.json
            exit 1
          fi
        else
          echo "❌ Google Sheets 인증 파일이 비어있습니다"
          ls -la credentials/
          exit 1
        fi
      env:
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        
    - name: Set up environment variables
      env:
        TEAMS_TENANT_ID: ${{ secrets.TEAMS_TENANT_ID }}
        TEAMS_CLIENT_ID: ${{ secrets.TEAMS_CLIENT_ID }}
        TEAMS_CLIENT_SECRET: ${{ secrets.TEAMS_CLIENT_SECRET }}
        TEAMS_TEAM_ID: ${{ secrets.TEAMS_TEAM_ID }}
        GH_TOKEN_1: ${{ secrets.GH_TOKEN_1 }}
        GH_TOKEN_2: ${{ secrets.GH_TOKEN_2 }}
      run: |
        echo "TEAMS_TENANT_ID=$TEAMS_TENANT_ID" >> $GITHUB_ENV
        echo "TEAMS_CLIENT_ID=$TEAMS_CLIENT_ID" >> $GITHUB_ENV
        echo "TEAMS_CLIENT_SECRET=$TEAMS_CLIENT_SECRET" >> $GITHUB_ENV
        echo "TEAMS_TEAM_ID=$TEAMS_TEAM_ID" >> $GITHUB_ENV
        echo "GH_TOKEN_1=$GH_TOKEN_1" >> $GITHUB_ENV
        echo "GH_TOKEN_2=$GH_TOKEN_2" >> $GITHUB_ENV
        
    - name: Run ML model retrain
      run: |
        echo "🤖 Starting monthly ML model retrain..."
        python main.py --mode retrain
        
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ml-model-files
        path: |
          models/
          logs/
        retention-days: 30